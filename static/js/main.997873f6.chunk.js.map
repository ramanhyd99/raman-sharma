{"version":3,"sources":["logo.svg","NavMenu.js","WeatherCard.js","Quotes.js","Weather.js","Info.js","raman.png","NavMenuRoute.js","App.js","reportWebVitals.js","index.js"],"names":["NavMenu","color","background","style","to","React","Component","WeatherCard","props","CELSIUS","useState","unit","day","dayType","max","min","temperature","tempChange","convertToFah","val","undefined","width","type","img","getIcon","tag","className","toFixed","onClick","eventObj","preventDefault","Quotes","state","data","getQuote","randomVal","Math","floor","random","length","text","author","console","log","quote","quoteOnClickHandler","rerenderParentCallback","axios","get","then","resp","catch","err","this","placeholder","Weather","card","display","justifyContent","alignItems","appId","latitude","longitude","size","getLocation","navigator","geolocation","getCurrentPosition","storeLocation","alert","position","getWeatherInfo","coords","lat","long","setState","getDay","num","rows","Date","prototype","addDays","days","date","setDate","getDate","bind","forceUpdate","daily","i","dayFinal","toLocaleString","weather","main","temp","push","slice","Info","NavMenuRoute","exact","path","element","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.997873f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Badge, List, Navbar, ListGroupItem, TabPane } from \"reactstrap\";\n\nclass NavMenu extends React.Component {\n\n    color = { background: 'SlateGray' }\n\n    render() {\n\n        return (\n            <div>\n                <NavLink style={{ 'text-decoration': 'none' }} to='/'>\n                    <Badge style={{ 'text-color': 'LightGrey' }} >\n                        Home\n                    </Badge> </NavLink>\n                <NavLink style={{ 'text-decoration': 'none' }} to='/weather'>\n                    <Badge style={{ 'text-color': 'LightGrey' }} >\n                        Weather\n                    </Badge> </NavLink>\n\n\n            </div>\n        )\n    }\n}\n\nexport default NavMenu;","import React from \"react\";\nimport { Spinner, Card, CardBody, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\nimport { useState } from \"react\";\nimport {WiRain, WiDaySunny, WiThunderstorm, WiDayCloudy } from \"react-icons/wi\";\n\nconst WeatherCard = (props) => {\n\n    const CELSIUS = '°C'\n    const FAHRN = '°F'\n    const [temperature, tempChange] = useState({unit : CELSIUS, day: props.day, dayType:props.dayType, max : props.max, min: props.min})\n    \n    const tempChangeHandler = (eventObj) => {\n        eventObj.preventDefault()\n\n        if (temperature.unit === CELSIUS) {\n            let max = convertToFah(props.max)\n            let min = convertToFah(props.min)\n            tempChange({unit: FAHRN, day: props.day, dayType:props.dayType, max : max, min : min})\n        }\n        else {\n            tempChange({unit: CELSIUS, day: props.day, dayType:props.dayType, max : props.max, min : props.min})\n        }\n    }\n\n    const convertToFah = (val) => {\n        return val * 1.8000 + 32.000\n    }\n\n    const getIcon = (dayType) =>{\n\n        switch(dayType){\n            case 'Clouds':\n                return <WiDayCloudy/>\n                break;\n            case 'Rain':\n            case 'Drizzle':\n                return <WiRain/>\n                break;\n            case 'Thunderstorm':\n                return <WiThunderstorm/>\n                break;\n            default:\n                return <WiDaySunny/>\n\n        }\n\n    }\n    if (props.day == undefined) {\n        return (\n            <Card style={{ background: 'Seashell', width: '32%' }}>\n                <CardBody>\n                    <Spinner\n                        color=\"info\"\n                        type=\"grow\"\n                    >\n                    </Spinner>\n                </CardBody>\n            </Card>\n        )\n    }\n\n    else {\n        //tempChange({unit: CELSIUS, max : props.max, min : props.min})\n        let img = getIcon(temperature.dayType)\n\n        return (\n            <Card style={{ background: 'Seashell', width: '32%' }}>\n                <CardBody>\n                    <CardTitle tag=\"h5\">\n                        {temperature.day}\n                    </CardTitle>\n                    <CardSubtitle\n                        className=\"mb-2 text-muted\"\n                        tag=\"h6\"\n                    >\n                        {img}   {temperature.dayType}\n                    </CardSubtitle>\n                    <CardText>\n                        <b>High</b>: {temperature.max.toFixed(0)} {temperature.unit} \n                        <b> Low</b>: {temperature.min.toFixed(0)}{temperature.unit} \n                    </CardText>\n                    <Button onClick={tempChangeHandler}>\n                        Change units\n                    </Button>\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default WeatherCard;","import React from \"react\";\nimport { HiRefresh } from \"react-icons/hi\";\nimport { Alert, Card, CardBody, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\nimport WeatherCard from \"./WeatherCard\";\nimport axios from \"axios\";\n\nclass Quotes extends React.Component {\n\n    constructor() {\n        super()\n        axios.get('https://type.fit/api/quotes').then((resp) => {\n            let quotes = resp.data\n            this.state.data = resp.data\n            console.log('got data')\n        }).catch(err => { console.log('error getting quotes' + err) })\n    }\n\n    state = ({ data: undefined, 'placeholder': 'Something good is coming...' })\n\n    getQuote = () => {\n        let randomVal = Math.floor(Math.random() * this.state.data.length)\n        let text = this.state.data[randomVal].text\n        let author = this.state.data[randomVal].author == 'null' ? 'anonymous' : this.state.data[randomVal].author\n        console.log('Elemhant ' + text)\n        return this.quote = '\"' + text + '\"  - ' + author\n    }\n\n\n    quoteOnClickHandler = () => {\n        this.props.rerenderParentCallback();\n    }\n    render() {\n\n        if (this.state.data == undefined) {\n            return (<Alert\n                color=\"primary\"\n            >\n                {this.state.placeholder}\n            </Alert>)\n        } else {\n\n            let quote = this.getQuote()\n            return <Alert\n                color=\"primary\"\n            >\n                {quote} <b><HiRefresh onClick={this.quoteOnClickHandler} /></b>\n            </Alert>\n        }\n\n\n    }\n}\n\nexport default Quotes;","import React from \"react\";\nimport { Alert, Card, CardBody, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\nimport WeatherCard from \"./WeatherCard\";\nimport axios from \"axios\";\nimport { BsArrowCounterclockwise } from \"react-icons/bs\";\nimport Quotes from \"./Quotes\";\n\nclass Weather extends React.Component {\n\n  constructor() {\n    super()\n    Date.prototype.addDays = (days) => {\n      let date = new Date();\n      date.setDate(date.getDate() + days)\n      return date;\n    }\n    this.rerenderParentCallback = this.rerenderParentCallback.bind(this);\n  }\n\n  rerenderParentCallback() {\n    this.forceUpdate();\n  }\n\n  card = { width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }\n  appId = 'd4d30ddd6572e38d2f4a1a0da77eea30'\n  state = { latitude: undefined, longitude: undefined, data: undefined, size: 0, quote: 'Something good is coming...' }\n\n  getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.storeLocation);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\")\n      this.state({\n        latitude: 'n/a',\n        longitude: 'n/a'\n      })\n    }\n  }\n\n  storeLocation = (position) => {\n    this.getWeatherInfo(position.coords.latitude, position.coords.longitude)\n  }\n\n  getWeatherInfo = (lat, long) => {\n    axios.get('https://api.openweathermap.org/data/2.5/onecall?' +\n      'lat=' + lat + '&' +\n      'lon=' + long + '&units=metric' + '&' +\n      'appid=' + this.appId).then((resp) => {\n\n        this.setState({\n          data: resp.data,\n          latitude: lat,\n          longitude: long\n        })\n      }).catch(err => { console.log('error getting weather' + err) })\n  }\n\n  componentDidMount() {\n    this.getLocation()\n  }\n\n\n  getDay = (num) => {\n    const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    return weekday[num];\n  }\n\n  rows = []\n\n  render() {\n\n    if (this.state.data != undefined) {\n\n      this.rows = []\n      let days = this.state.data.daily;\n\n      for (var i = 0; i < 6; i++) {\n\n        let dayOfWeek = this.getDay(((new Date()).getDay() + i) % 7)\n        let date = new Date().addDays(i)\n        let dayNum = date.getDate().toLocaleString('default', { 'month': 'long' });\n        let dayFinal = dayOfWeek + ' ' + dayNum\n\n        let dayType = days[i].weather[0].main\n        let max = days[i].temp.max\n        let min = days[i].temp.min\n\n        this.rows.push((<WeatherCard key={i} day={dayFinal} dayType={dayType} max={max} min={min} />))\n      }\n    } else {\n      for (var i = 0; i < 6; i++) {\n        this.rows.push((<WeatherCard />))\n      }\n    }\n\n\n    return (\n\n      <div>\n        <div style={{ width: '50%', display: 'flex', 'margin-left': '30%' }}>\n          <Quotes rerenderParentCallback={this.rerenderParentCallback} />\n        </div>\n\n        <div style={{ display: 'flex', 'margin-left': '30%' }}>\n          <div style={{ width: '50%' }}>\n            <div style={this.card}>\n              {this.rows.slice(0, 3)}\n            </div>\n            <br />\n            <div style={this.card}>\n              {this.rows.slice(3)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Weather;","import React from \"react\";\nimport raman from './raman.png'\nimport { Toast, ToastHeader, ToastBody, List, ListGroupItem } from \"reactstrap\";\n\nclass Info extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"p-3 bg-info my-2 rounded\" style={{ display: 'flex', 'margin-left': '40%', 'margin-right':'40%' }}>\n                <Toast>\n                    <ToastHeader>\n                        About me\n                    </ToastHeader>\n                    <ToastBody>\n                        <b>Name: </b> Raman\n                        <br />\n                        <b>Insta: </b> raman_5harma\n                    </ToastBody>\n                </Toast>\n            </div>\n        )\n    }\n}\n\n\nexport default Info","export default __webpack_public_path__ + \"static/media/raman.1fea034a.png\";","import React from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Weather from './Weather';\nimport Info from './Info'\n\nconst NavMenuRoute = () => {\n\n\n    return (\n        <Routes>\n            <Route exact path='/weather' element={<Weather />}></Route>\n            <Route exact path='/' element={<Info />}></Route>\n        </Routes>\n    )\n}\n\nexport default NavMenuRoute;","import logo from './logo.svg';\nimport './App.css';\nimport { Tab } from 'bootstrap';\nimport { Card } from 'reactstrap';\nimport NavMenu from './NavMenu';\nimport NavMenuRoute from './NavMenuRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <NavMenu/>\n      </header>\n      <br/>\n      <NavMenuRoute/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}